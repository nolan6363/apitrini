services:
  backend:
    build: ./backend
    container_name: apitrini-backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./backend/storage:/app/storage
      - pip_cache:/root/.cache/pip
    environment:
      - VITE_API_URL=https://api.apitrini.com/
      - MYSQL_HOST=db
      - MYSQL_USER=apitrini
      - MYSQL_PASSWORD=#GetTheBeesToWork/667
      - MYSQL_DATABASE=apitrini_db
    depends_on:
      - db
    networks:
      - apitrini-network

  frontend:
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    container_name: apitrini-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/frontend:cached
      - /frontend/node_modules
    environment:
      - VITE_API_URL=https://api.apitrini.com/
      - NODE_ENV="production"
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - VITE_DEV_SERVER_HOST=0.0.0.0
      - VITE_DEV_SERVER_PORT=5173
      - VITE_HMR_PROTOCOL=ws
      - VITE_HMR_TIMEOUT=120000
    networks:
      - apitrini-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  db:
    image: mariadb:10.6
    container_name: apitrini-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=#GetTheBeesToWork/667
      - MYSQL_DATABASE=apitrini_db
      - MYSQL_USER=apitrini
      - MYSQL_PASSWORD=#GetTheBeesToWork/667
    ports:
      - "3307:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - apitrini-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
  nginx:
    build: ./nginx
    container_name: apitrini-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/webroot:/var/www/html
    depends_on:
      - frontend
      - backend
    networks:
      - apitrini-network

networks:
  apitrini-network:
    name: apitrini-network

volumes:
  pip_cache:
    driver: local
  mariadb_data:
    driver: local
